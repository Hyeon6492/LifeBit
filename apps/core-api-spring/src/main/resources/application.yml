server:
  port: 8080

spring:
  profiles:
    active: development
  datasource:
    url: jdbc:postgresql://localhost:5432/lifebit_db?stringtype=unspecified&connectTimeout=30&socketTimeout=60&ApplicationName=LifeBit-Core-API-Dev
    username: lifebit_user
    password: lifebit_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      connection-timeout: 30000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      validation-timeout: 5000
  jpa:
    hibernate:
      ddl-auto: update  # 개발환경에서는 update 사용
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        jdbc:
          lob:
            '[non_contextual_creation]': true
          time_zone: Asia/Seoul
        '[globally_quoted_identifiers]': true
        '[globally_quoted_identifiers_skip_column_definitions]': true
        connection:
          '[provider_disables_autocommit]': false
        '[order_inserts]': true
        '[order_updates]': true
        '[batch_versioned_data]': true
        format_sql: false
        use_sql_comments: false
    open-in-view: false
  
  # Flyway 마이그레이션 설정 (임시 비활성화)
  flyway:
    enabled: false  # JPA가 테이블을 생성하도록 임시 비활성화
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
    sql-migration-prefix: V
    sql-migration-separator: __
    sql-migration-suffixes: .sql

file:
  upload-dir: uploads/

springdoc:
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics
      cors:
        allowed-origins: "http://localhost:5173"
        allowed-methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
        allowed-headers: "*"
        allow-credentials: true
        max-age: 3600
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    defaults:
      enabled: true

logging:
  level:
    com.lifebit: DEBUG
    com.lifebit.coreapi.controller.MealLogController: DEBUG
    com.lifebit.coreapi.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    root: INFO

---
# 개발환경 설정 (로컬 개발용)
spring:
  config:
    activate:
      on-profile: development
  
  datasource:
    url: jdbc:postgresql://localhost:5432/lifebit_db?stringtype=unspecified&connectTimeout=30&socketTimeout=60&ApplicationName=LifeBit-Core-API-Dev
    username: lifebit_user
    password: lifebit_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      connection-timeout: 30000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      validation-timeout: 5000
      
  jpa:
    hibernate:
      ddl-auto: update  # 로컬 테스트용으로 validate로 변경
    show-sql: true  # 개발환경에서는 SQL 로그 표시
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        jdbc:
          lob:
            '[non_contextual_creation]': true
          time_zone: Asia/Seoul
        '[globally_quoted_identifiers]': true
        '[globally_quoted_identifiers_skip_column_definitions]': true
        connection:
          '[provider_disables_autocommit]': false
        '[order_inserts]': true
        '[order_updates]': true
        '[batch_versioned_data]': true
        format_sql: true  # 개발환경에서는 SQL 포맷팅
        use_sql_comments: true
    open-in-view: false

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics
      cors:
        allowed-origins: "http://localhost:5173"
        allowed-methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
        allowed-headers: "*"
        allow-credentials: true
        max-age: 3600

logging:
  level:
    com.lifebit: DEBUG
    com.lifebit.coreapi.controller.MealLogController: DEBUG
    com.lifebit.coreapi.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    root: INFO

---
# 프로덕션 환경 설정
spring:
  config:
    activate:
      on-profile: production
  
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres-db:5432/lifebit_db?stringtype=unspecified}
    username: ${SPRING_DATASOURCE_USERNAME:lifebit_user}
    password: ${SPRING_DATASOURCE_PASSWORD:lifebit_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
      
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
    show-sql: ${SPRING_JPA_SHOW_SQL:false}
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
    properties:
      hibernate:
        jdbc:
          lob:
            '[non_contextual_creation]': true
          time_zone: ${SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE:Asia/Seoul}
        '[globally_quoted_identifiers]': true
        '[globally_quoted_identifiers_skip_column_definitions]': true
        connection:
          '[provider_disables_autocommit]': false
        '[order_inserts]': true
        '[order_updates]': true
        '[batch_versioned_data]': true
        format_sql: false
        use_sql_comments: false
    open-in-view: false

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics
      cors:
        allowed-origins: ${CORS_ORIGINS:http://localhost:3000}
        allowed-methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
        allowed-headers: "*"
        allow-credentials: true
        max-age: 3600

logging:
  level:
    com.lifebit: ${LOG_LEVEL:INFO}
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    root: INFO