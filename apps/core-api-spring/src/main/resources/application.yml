server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:lifebit_db}?stringtype=unspecified
    username: ${DB_USER:lifebit_user}
    password: ${DB_PASSWORD:lifebit_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
  jpa:
    hibernate:
      ddl-auto: update  # 기존 데이터 보존하면서 스키마 업데이트
    show-sql: false  # 운영에서는 기본적으로 비활성화
    properties:
      hibernate:
        jdbc:
          lob:
            '[non_contextual_creation]': true
        '[globally_quoted_identifiers]': true
        '[globally_quoted_identifiers_skip_column_definitions]': true
        connection:
          '[provider_disables_autocommit]': false
        '[order_inserts]': true
        '[order_updates]': true
        '[batch_versioned_data]': true
    open-in-view: false
  
  # Flyway 마이그레이션 설정 (임시 비활성화)
  flyway:
    enabled: false  # JPA가 테이블을 생성하도록 임시 비활성화
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
    sql-migration-prefix: V
    sql-migration-separator: __
    sql-migration-suffixes: .sql

file:
  upload-dir: uploads/

springdoc:
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics
      cors:
        allowed-origins: "http://localhost:5173"
        allowed-methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
        allowed-headers: "*"
        allow-credentials: true
        max-age: 3600
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    defaults:
      enabled: true

logging:
  level:
    com.lifebit: DEBUG
    com.lifebit.coreapi.controller.MealLogController: DEBUG
    com.lifebit.coreapi.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    root: INFO

# ================================================
# 프로파일별 설정
# ================================================
---
# 🔧 로컬 개발용 프로파일
spring:
  config:
    activate:
      on-profile: "local"
  datasource:
    url: jdbc:postgresql://localhost:5432/lifebit_db?stringtype=unspecified
    show-sql: true  # 로컬에서는 SQL 로그 활성화
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# 🐳 Docker 환경용 프로파일
spring:
  config:
    activate:
      on-profile: "docker"
  datasource:
    url: jdbc:postgresql://postgres-db:5432/${DB_NAME:lifebit_db}?stringtype=unspecified