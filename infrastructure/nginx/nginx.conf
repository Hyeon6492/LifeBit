events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 형식 정의
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log   warn;

    # 기본 설정
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    
    # 버퍼 크기 증가 (대용량 요청 처리)
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;

    # 업스트림 정의 (헬스체크 및 백업 서버 추가)
    upstream frontend {
        server frontend:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream core_api {
        server core-api:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream ai_api {
        server ai-api:8001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # CORS 헤더 매크로 정의
    map $request_method $cors_method {
        OPTIONS 11;
        GET     1;
        POST    1;
        PUT     1;
        DELETE  1;
        PATCH   1;
        default 0;
    }

    # 메인 서버 블록
    server {
        listen 80;
        server_name _;
        
        # SSL 인증서가 있을 때만 HTTPS로 리다이렉트
        # 없으면 HTTP로 서비스 제공
        location / {
            # 임시로 HTTP 서비스도 제공 (SSL 설정 완료 후 HTTPS 리다이렉트 활성화 가능)
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 90s;
            proxy_send_timeout 90s;
            proxy_read_timeout 90s;
        }
        
        # Core API (HTTP)
        location /api/ {
            proxy_pass http://core_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
        
        # AI API (HTTP)
        location /ai-api/ {
            proxy_pass http://ai_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 180s;
            proxy_send_timeout 180s;
            proxy_read_timeout 300s;
        }
        
        # 헬스체크
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    server {
        listen 443 ssl;
        server_name _;
        ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 클라이언트 요청 크기 제한
        client_max_body_size 50M;
        client_body_buffer_size 16k;
        client_header_buffer_size 1k;
        large_client_header_buffers 4 8k;

        # 프론트엔드 (기본 경로)
        location / {
            # OPTIONS 요청 처리 (Preflight)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # HTTP/1.1 연결 유지
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # 타임아웃 설정 증가
            proxy_connect_timeout       90s;
            proxy_send_timeout          90s;
            proxy_read_timeout          90s;
            
            # 에러 페이지 처리
            proxy_intercept_errors on;
            error_page 502 503 504 /50x.html;
        }

        # Core API
        location /api/ {
            # OPTIONS 요청 처리 (Preflight)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            proxy_pass http://core_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # HTTP/1.1 연결 유지
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # 타임아웃 설정 증가 (Spring Boot 시작 시간 고려)
            proxy_connect_timeout       120s;
            proxy_send_timeout          120s;
            proxy_read_timeout          120s;
            
            # 재시도 설정
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # Actuator 엔드포인트 (헬스체크용)
        location /actuator/ {
            proxy_pass http://core_api/actuator/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 짧은 타임아웃 (헬스체크용)
            proxy_connect_timeout       30s;
            proxy_send_timeout          30s;
            proxy_read_timeout          30s;
        }

        # AI API
        location /ai-api/ {
            # OPTIONS 요청 처리 (Preflight)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            proxy_pass http://ai_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # HTTP/1.1 연결 유지
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # AI API는 응답 시간이 길 수 있으므로 타임아웃 증가
            proxy_connect_timeout       180s;
            proxy_send_timeout          180s;
            proxy_read_timeout          300s;  # GPT API 호출 시간 고려
            
            # 재시도 설정
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 15s;
        }

        # 정적 파일 캐싱 및 압축
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Gzip 압축
            gzip on;
            gzip_vary on;
            gzip_min_length 1024;
            gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        }

        # 헬스체크 엔드포인트 (로드밸런서용)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 통합 헬스체크 (모든 서비스 상태 확인)
        location /health/all {
            access_log off;
            proxy_pass http://core_api/actuator/health;
            proxy_set_header Host $host;
            proxy_connect_timeout 10s;
            proxy_read_timeout 10s;
        }

        # 에러 페이지
        location = /50x.html {
            root /usr/share/nginx/html;
            # 보안 헤더 추가
            add_header X-Content-Type-Options nosniff always;
            add_header X-Frame-Options DENY always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;
        }
    }
} 