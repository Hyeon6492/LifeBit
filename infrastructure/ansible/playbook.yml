- name: Deploy LifeBit Application Server
  hosts: all
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required system packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - git
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x,o+x'

    - name: Clone the project repository
      git:
        repo: 'https://github.com/LifeBit-project/LifeBit.git'
        dest: /srv/lifebit
        version: main
        force: yes

    - name: Run docker-compose
      command: docker-compose -f /srv/lifebit/docker-compose.prod.yml up -d --build
      args:
        chdir: /srv/lifebit
      environment:
        # Secrets for backend services
        OPENAI_API_KEY: "{{ lookup('env', 'OPENAI_API_KEY') }}"
        JWT_SECRET_KEY: "{{ lookup('env', 'JWT_SECRET_KEY') }}"
        GOOGLE_CLIENT_SECRET: "{{ lookup('env', 'GOOGLE_CLIENT_SECRET') }}"

        # Secrets for frontend build args
        KAKAO_CLIENT_ID: "{{ lookup('env', 'KAKAO_CLIENT_ID') }}"
        GOOGLE_CLIENT_ID: "{{ lookup('env', 'GOOGLE_CLIENT_ID') }}"

        # Non-secret configurations
        USE_GPT: "{{ lookup('env', 'USE_GPT') | default('True') }}"
        CORS_ORIGINS: "{{ lookup('env', 'CORS_ORIGINS') | default('http://*') }}" 