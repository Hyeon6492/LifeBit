- name: Deploy Application Stack
  hosts: servers
  become: true
  vars:
    project_dir: /home/ubuntu/LifeBit
  tasks:
    - name: Ensure apt cache is updated
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required system packages
      apt:
        name:
          - git
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Ensure Docker service is started
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Clone or pull the repository
      git:
        repo: 'https://github.com/Hyeon6492/LifeBit.git'
        dest: "{{ project_dir }}"
        version: main
        force: yes

    - name: Create .env file for Docker Compose
      template:
        src: env.j2
        dest: "{{ project_dir }}/.env"
        mode: '0600'
      vars:
        OPENAI_API_KEY: "{{ lookup('env', 'OPENAI_API_KEY') }}"
        JWT_SECRET_KEY: "{{ lookup('env', 'JWT_SECRET_KEY') }}"
        GOOGLE_CLIENT_SECRET: "{{ lookup('env', 'GOOGLE_CLIENT_SECRET') }}"
        KAKAO_CLIENT_ID: "{{ lookup('env', 'KAKAO_CLIENT_ID') }}"
        GOOGLE_CLIENT_ID: "{{ lookup('env', 'GOOGLE_CLIENT_ID') }}"
        USE_GPT: "{{ lookup('env', 'USE_GPT') | default('True') }}"
        CORS_ORIGINS: "{{ lookup('env', 'CORS_ORIGINS') | default('http://*') }}"

    - name: Run Docker Compose
      command: docker-compose -f "{{ project_dir }}/docker-compose.prod.yml" up -d --build
      args:
        chdir: "{{ project_dir }}"
